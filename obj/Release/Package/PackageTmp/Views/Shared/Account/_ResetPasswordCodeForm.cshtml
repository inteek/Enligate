@using sw_EnligateWeb.Models
@model ResetPasswordViewModel

@Html.AntiForgeryToken()
@Html.HiddenFor(m => m.usuEmail)
@Html.HiddenFor(m => m.userId)
@Html.HiddenFor(m => m.Code)

<div class="col-md-12">
    <div class="mlLabels">
        @Html.LabelFor(m => m.usuEmail, new { @class = "mSpaceMb0" })
        <br />
        <b>
        @if (Model.usuEmail != null)
        {
            <label class="mContent3">

                @Model.usuEmail

            </label>
        }
        </b>
    </div>
</div>

<div class="col-md-12 mSpaceMt10">
    <div class="mlLabels">
        @Html.LabelFor(m => m.usuPassword, new { @class = "mSpaceMb0" })
    </div>
    <div>
        @Html.PasswordFor(m => m.usuPassword, new { @class = "width100", value = Model.usuPassword })
        @Html.ValidationMessageFor(m => m.usuPassword, "", new { @class = "text-danger" })
    </div>
</div>

<div class="col-md-12 mSpaceMt10">
    <div class="mlLabels">
        @Html.LabelFor(m => m.usuConfirmPassword, new { @class = "mSpaceMb0" })
    </div>
    <div>
        @Html.PasswordFor(m => m.usuConfirmPassword, new { @class = "width100", value = Model.usuConfirmPassword })
        @Html.ValidationMessageFor(m => m.usuConfirmPassword, "", new { @class = "text-danger" })
    </div>
</div>

<div class="col-md-12 mSpaceMt20">
    <input type="submit" value="Enviar" class="btn btn-default width100" />
</div>

<div class="hidden m-messageHide">
    @Html.Partial("_ModalState_Errors")
</div>

<script type="text/javascript">
    @{ <text> @(new HtmlString(Model.scriptJS)) </text>}
</script>
